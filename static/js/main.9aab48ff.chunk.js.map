{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","request","a","fetch","then","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","setTitle","setMovie","isFound","setIsFound","getMovie","data","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","App","moviesFromStorage","JSON","parse","window","localStorage","getItem","state","find","film","setState","stringifiedMovies","stringify","setItem","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9aab48ff.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=c77ea3c8';\n\nexport const request = async title => fetch(`${BASE_URL}&t=${title}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [isFound, setIsFound] = useState(false);\n\n  const addFilm = () => {\n    addMovie(movie);\n    setMovie(null);\n  };\n\n  const getMovie = async() => {\n    setIsFound(false);\n    const data = await request(title);\n\n    if (data.Response === 'False') {\n      setIsFound(true);\n      setTitle('');\n      setMovie(null);\n\n      return;\n    }\n\n    setMovie({\n      title: data.Title,\n      description: data.Plot,\n      imgUrl: data.Poster,\n      imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n      imdbId: data.imdbID,\n    });\n    setTitle('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${!isFound ? 'is-danger' : ''}`}\n              value={title}\n              onChange={event => setTitle(event.target.value)}\n            />\n          </div>\n\n          {isFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addFilm}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (<MovieCard {...movie} />)}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nconst moviesKey = 'movies';\n\nexport class App extends Component {\n  moviesFromStorage = JSON.parse(window.localStorage.getItem(moviesKey));\n\n  state = {\n    movies: this.moviesFromStorage || data,\n  };\n\n  addMovie = (movie) => {\n    const { movies } = this.state;\n\n    if (movie && !movies.find(film => film.imdbId === movie.imdbId)) {\n      this.setState(state => ({\n        movies: [\n          ...state.movies,\n          movie,\n        ],\n      }),\n      () => {\n        const stringifiedMovies = JSON.stringify(movies);\n\n        window.localStorage.setItem(moviesKey, stringifiedMovies);\n      });\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n    const { addMovie } = this;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}